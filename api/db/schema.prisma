// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:

model Amphi {
  id           Int        @id @default(autoincrement())
  name         String     @unique
  lat          Float
  lon          Float
  seats        Int
  description  String     @default("")
  universityId Int
  university   University @relation(fields: [universityId], references: [id])
  images       Image[]
  features     Feature[]
  issues       Issue[]
}

model Feature {
  id     Int     @id @default(autoincrement())
  name   String
  value  String?
  icon   String
  amphis Amphi[]
}

model University {
  id    Int     @id @default(autoincrement())
  name  String
  Amphi Amphi[]
}

model Media {
  id   Int    @id @default(autoincrement())
  type String
  path String
}

model Image {
  id      Int    @id @default(autoincrement())
  title   String
  url     String
  Amphi   Amphi? @relation(fields: [amphiId], references: [id])
  amphiId Int?
}

model Issue {
  id          Int      @id @default(autoincrement())
  severity    String // Changed from IssueSeverity to String
  description String
  upvotes     Int      @default(0)
  isFixed     Boolean  @default(false)
  createdAt   DateTime @default(now())
  amphi       Amphi    @relation(fields: [amphiId], references: [id])
  amphiId     Int
}
